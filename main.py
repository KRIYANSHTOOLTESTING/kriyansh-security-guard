import os
import random
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

# Bot ‡§ü‡•ã‡§ï‡§® (Render.com ‡§ï‡•á Environment Variables ‡§∏‡•á ‡§≤‡•á‡§ó‡§æ)
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
MONGO_DB = os.getenv("MONGO_DB")  # MongoDB ‡§Ø‡•Ç‡§Ü‡§∞‡§è‡§≤

# Pyrogram ‡§ï‡•ç‡§≤‡§æ‡§á‡§Ç‡§ü ‡§á‡§®‡§ø‡§∂‡§ø‡§Ø‡§≤‡§æ‡§á‡§ú‡§º ‡§ï‡§∞‡•á‡§Ç
app = Client("KriyanshBot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

# ---------------------- ‡§Æ‡•â‡§°‡§∞‡•á‡§∂‡§® ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏ ----------------------
@app.on_message(filters.command("ban"))
async def ban_user(_, msg: Message):
    if msg.reply_to_message:
        user_id = msg.reply_to_message.from_user.id
        await msg.chat.ban_member(user_id)
        await msg.reply(f"üö´ {user_id} ‡§ï‡•ã ‡§¨‡•à‡§® ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!")

@app.on_message(filters.command("unban"))
async def unban_user(_, msg: Message):
    if msg.reply_to_message:
        user_id = msg.reply_to_message.from_user.id
        await msg.chat.unban_member(user_id)
        await msg.reply(f"‚úÖ {user_id} ‡§ï‡•ã ‡§Ö‡§®‡§¨‡•à‡§® ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!")

# ---------------------- ‡§è‡§Ç‡§ü‡§∞‡§ü‡•á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§´‡•Ä‡§ö‡§∞‡•ç‡§∏ ----------------------
@app.on_message(filters.command("meme"))
async def send_meme(_, msg: Message):
    memes = [
        "https://telegra.ph/file/meme1.jpg",
        "https://telegra.ph/file/meme2.jpg",
    ]
    await msg.reply_photo(random.choice(memes))

@app.on_message(filters.command("love"))
async def love_calc(_, msg: Message):
    if msg.reply_to_message:
        user = msg.reply_to_message.from_user
        love_percent = random.randint(0, 100)
        await msg.reply(f"üíñ {user.mention} ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•ç‡§Ø‡§æ‡§∞ {love_percent}% ‡§π‡•à!")

# ---------------------- AI ‡§ö‡•à‡§ü (ChatGPT ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤) ----------------------
@app.on_message(filters.command("ai"))
async def ai_chat(_, msg: Message):
    query = msg.text.split(" ", 1)[1]
    response = f"ü§ñ AI: {query} ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§è‡§ó‡§æ..."
    await msg.reply(response)

# ---------------------- ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§ï‡§Æ‡§æ‡§Ç‡§° ----------------------
@app.on_message(filters.command("start"))
async def start(_, msg: Message):
    await msg.reply(
        "‚ú® **‡§¨‡§µ‡§æ‡§≤ ‡§¨‡•â‡§ü** ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!\n"
        "‡§Æ‡§æ‡§≤‡§ø‡§ï: @KRIYANSH_CHOUDHARY\n\n"
        "‡§ï‡§Æ‡§æ‡§Ç‡§°‡•ç‡§∏:\n"
        "/ban - ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•ã ‡§¨‡•à‡§® ‡§ï‡§∞‡•á\n"
        "/meme - ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§Æ‡•á‡§Æ‡•á ‡§≠‡•á‡§ú‡•á\n"
        "/ai [‡§∏‡§µ‡§æ‡§≤] - AI ‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‡§Æ‡§æ‡§≤‡§ø‡§ï", url="https://t.me/KRIYANSH_CHOUDHARY")]
        ])
    )

# ---------------------- ‡§¨‡•â‡§ü ‡§∞‡§® ‡§ï‡§∞‡•á‡§Ç ----------------------
print("‡§¨‡•â‡§ü ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...")
app.run()
